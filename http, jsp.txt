톰캣은 아파치를 돌리는 서버 컨테이너이다
서블릿과 JSP는 톰캣을 이용한다

String url = "jdbc:mysql://localhost:3307/spring5fs";
Connection con = null;
ResultSet rs = null;
PreparedStatement pstmt = null;
Class.forName("com.mysql.cj.jdbc.Driver");
con = DriverManager.getConnection(url, "root", "mysql");

	public static void close(PreparedStatement pstmt, Connection con) {
		try {
			pstmt.close();
		}catch (SQLException e) {
			e.printStackTrace();
		}
		
		try {
			con.close();
		}catch(SQLException e) {
			e.printStackTrace();
		}
	}

	public static void close(ResultSet rs, PreparedStatement pstmt, Connection con) {
		try {
			rs.close();
		}catch (SQLException e) {
			e.printStackTrace();
		}

		try {
			pstmt.close();
		}catch (SQLException e) {
			e.printStackTrace();
		}
		
		try {
			con.close();
		}catch(SQLException e) {
			e.printStackTrace();
		}
	}


window > preferences > Server > runtimeEnvironment > add > apache tomcat 9.0으로 톰캣서버 추가

doGet 메소드는 Get 방식으로 데이터를 받는 리퀘스트 객체가 있다.
데이터를 전달하기 위해선 jsp 페이지에서 input 태그에 name 속성을 주어 전달할 수 있으며, 
request.getParameter("name속성값") 으로 호출이 가능하다.

response.setContentType("text/html;charset=utf-8");	// 인코딩방식 utf-8로 설정
request.getContextPath()는 프로젝트 이름을 반환한다.

form 태그로 웹페이지 이동 및 데이터를 전송할 수 있다.

정적페이지: 변하지 않는 성격을 가진 페이지
동적페이지: 자동으로 생성된 페이지, 기존의 웹 서버에 새로운 기능을 가진 프로ㅓ그램을 탑재하여 동적으로 html을 생성

<form>태그에서 지정한 값을 보낼 때는 input type = "hidden"을 사용한다.
<input type = "hidden" name = "이름" = value = "보낼 값">

DAO(Data Access Object)는 DB에 접근하기 위한 객체이다.
DTO(Data Transfer Object)는 로직을 가지지 않은 데이터 객체이다.
VO(Value Object)는 Read-Only 속성을 가진 객체이다.

쿠키는 웹 페이지에서 데이터를 저장하기 위한 객체이며, 사용자의 편의를 위해 사용한다.
1. 쿠키 생성 -> 2. 쿠키 저장 -> 3. 쿠키 전달
response.addCookie(쿠키)	// 쿠키를 생성한다.
request.getCookies()	// 쿠키들을 배열형태로 반환한다.

(Cookie 메소드)
setMaxAge(expiry)	// 쿠키의 유효시간을 설정
쿠키의 삭제는 쿠키의 유효시간을 0으로 만들고 addCookie()를 한다.

onclick="location.href='주소'"	// 클릭시 주소로 이동

session.setAttribute("이름", 객체);
session.getAttribute("이름");
session.invalidate();	// 세션 모두 삭제
session.removeAttribute("이름");	// 이름에 맞는 세션 삭제

EL(Expression Language)표현언어 ${변수명}
${변수명; ''}: 연산만 하고 출력하지 않음
jstl
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>	// jsp문서에 입력되어야함
<c:if test ="변수"> 실행할 문장 </c:if>
<c:choose>: if else문 비슷하다. 안에 when으로 조건을 걸 수 있다. 조건에 맞지 않을 경우 내려가며, 전부 맞지 않으면 otherwise태그를 실행한다.
<c:when test = "변수"> 실행할 문장</c:when>
<c:otherwise> 실행할 문장 </c:otherwise>
<c:forEach var='인덱스명' begin='시작인덱스' end='종료인덱스' step='간격'>: 반복문
<c:forEach var='변수명' items="${배열/리스트명}">: 자바의 향상된 for문 비슷한거임
${dto.num} => 앞글자를 대문자로 바꾸고 앞에 get을 붙인 다음에 뒤에 괄호를 붙여 불러온다. => dto.getNum()

<mapper namespace="네임스페이스">
<select id = "" parameterType = "" resultType = "">
	sql문
</select>
</mapper>